package context

import (
	"encoding/gob"
	"net"
	"strconv"
	"strings"
	"sync"
	"time"

	"gopkg.in/olahol/melody.v1"

	oss "github.com/krishpranav/exploit-framework/lib/util/os"
)

type ProcessState int

const (
	StartRequested ProcessState = iota
	Started
	TerminatRequested
	Terminated
)

type Process struct {
	Pid           int
	WindowColumns int
	WindowRows    int
	State         ProcessState
	WebSocket     *melody.Session
}

type TermiteClient struct {
	conn              net.Conn
	Hash              string              `json:"hash"`
	Host              string              `json:"host"`
	Port              uint16              `json:"port"`
	Alias             string              `json:"alias"`
	User              string              `json:"user"`
	OS                oss.OperatingSystem `json:"os"`
	NetworkInterfaces map[string]string   `json:"network_interfaces"`
	Python2           string              `json:"python2"`
	Python3           string              `json:"python3"`
	TimeStamp         time.Time           `json:"timestamp"`
	server            *TCPServer
	EncoderLock       *sync.Mutex
	DecoderLock       *sync.Mutex
	AtomLock          *sync.Mutex
	Encoder           *gob.Encoder
	Decoder           *gob.Decoder
	Processes         map[string]*Process
	CurrentProcessKey string
}

func CreateTermiteClient(conn net.Conn, server *TCPServer) *TermiteClient {
	host := strings.Split(conn.RemoteAddr().String(), ":")[0]
	port, _ := strconv.Atoi(strings.Split(conn.RemoteAddr().String(), ":")[1])
	return &TermiteClient{
		conn:              conn,
		Hash:              "",
		Host:              host,
		Port:              uint16(port),
		Alias:             "",
		User:              "",
		OS:                oss.Unknown,
		NetworkInterfaces: map[string]string{},
		Python2:           "",
		Python3:           "",
		TimeStamp:         time.Now(),
		server:            server,
		EncoderLock:       new(sync.Mutex),
		DecoderLock:       new(sync.Mutex),
		AtomLock:          new(sync.Mutex),
		Encoder:           gob.NewEncoder(conn),
		Decoder:           gob.NewDecoder(conn),
		Processes:         map[string]*Process{},
		CurrentProcessKey: "",
	}
}
